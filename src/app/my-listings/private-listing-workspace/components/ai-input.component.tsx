'use client';

import { getAutoGeneratedPropertyInfo } from '@/_utilities/api-calls/call-prompt';
import SpinningDots from '@/components/Loaders/SpinningDots';
import useDebounce from '@/hooks/useDebounce';
import { Events } from '@/hooks/useEvent';
import useFormEvent, { PrivateListingData } from '@/hooks/useFormEvent';
import { useCallback, useEffect, useState } from 'react';

export default function MyListingsAiInputComponent(props: { [k: string]: string }) {
  const [text_for_ai, setDescriptionForAi] = useState<string>('');
  const debouncedPrompt = useDebounce(text_for_ai, 1100);
  const [is_generating, toggleGenerating] = useState<boolean>(false);
  const { data, fireEvent } = useFormEvent<PrivateListingData>(Events.PrivateListingForm, { beds: 0, baths: 0, floor_area_uom: 'sqft', lot_uom: 'sqft' });
  // const [text_for_ai, setDescriptionForAi] = React.useState<string>('');
  // const debouncedPrompt = useDebounce(text_for_ai, 900);
  const checkPrompt = useCallback(
    (s: string) => {
      if (!is_generating) {
        toggleGenerating(true);
        getAutoGeneratedPropertyInfo(s)
          .then(res => {
            const { beds, baths, paragraph: description = '', dwelling_type } = res;
            fireEvent({
              ...data,
              beds,
              baths,
              description,
              dwelling_type,
            });
          })
          .finally(() => {
            toggleGenerating(false);
          });
      }
    },
    [text_for_ai],
  );

  useEffect(() => {
    if (!is_generating && debouncedPrompt.length > 5) {
      fireEvent({
        ...data,
        description: '',
      });
      checkPrompt(debouncedPrompt);
    } else {
      fireEvent({
        ...data,
        description: undefined,
        beds: 0,
        baths: 0,
        dwelling_type: undefined,
      });
    }
    return () => {};
  }, [debouncedPrompt, checkPrompt]);

  return (
    <div className='relative w-full'>
      {is_generating && <SpinningDots className='w-4 h-4 absolute right-0 -translate-x-1 top-1/2 -translate-y-1/2 fill-indigo-400' />}
      <input
        {...props}
        type='search'
        onChange={evt => {
          setDescriptionForAi(evt.currentTarget.value);
        }}
      />
    </div>
  );
}
// 5br home perfect for the family with a great backyard and patio
